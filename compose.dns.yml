# Example Docker Compose config file for traefik with letsencrypt using DNS Challenge (Apple macOS)

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    command: 
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"      
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=${DNS_PROVIDER}"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme-dns.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      EASYDNS_KEY: ${EASYDNS_KEY}
      EASYDNS_TOKEN: ${EASYDNS_TOKEN}
      EASYDNS_ENDPOINT: ${EASYDNS_ENDPOINT}  # override to use sandbox instead production
      EASYDNS_PROPAGATION_TIMEOUT: 300       # The default timeout not long enough for the TXT record to propagate.
      EASYDNS_POLLING_INTERVAL: 30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "${CERT_PATH:-./letsencrypt}:/letsencrypt"

  whoami:
    image: traefik/whoami:latest
    command: 
      - "--verbose=true"
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${HOST}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"